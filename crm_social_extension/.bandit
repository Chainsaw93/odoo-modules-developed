# Bandit security configuration for CRM Social Extension
# Run with: bandit -r . -f json -o bandit-report.json

# Tests to skip (use carefully and document why)
skips:
  # Skip hardcoded password tests for demo data
  - B106  # hardcoded_password_funcarg - used in demo data only
  - B108  # hardcoded_password_default - demo passwords are acceptable

# Tests to include
tests:
  - B101  # assert_used
  - B102  # exec_used
  - B103  # set_bad_file_permissions
  - B104  # hardcoded_bind_all_interfaces
  - B105  # hardcoded_password_string
  - B107  # hardcoded_password_default
  - B110  # try_except_pass
  - B112  # try_except_continue
  - B201  # flask_debug_true
  - B301  # pickle
  - B302  # marshal
  - B303  # md5
  - B304  # md5_insecure
  - B305  # cipher
  - B306  # mktemp_q
  - B307  # eval
  - B308  # mark_safe
  - B309  # httpsconnection
  - B310  # urllib_urlopen
  - B311  # random
  - B312  # telnetlib
  - B313  # xml_bad_cElementTree
  - B314  # xml_bad_ElementTree
  - B315  # xml_bad_expatreader
  - B316  # xml_bad_expatbuilder
  - B317  # xml_bad_sax
  - B318  # xml_bad_minidom
  - B319  # xml_bad_pulldom
  - B320  # xml_bad_etree
  - B321  # ftplib
  - B322  # input
  - B323  # unverified_context
  - B324  # hashlib_new_insecure_functions
  - B325  # tempnam
  - B401  # import_telnetlib
  - B402  # import_ftplib
  - B403  # import_pickle
  - B404  # import_subprocess
  - B405  # import_xml_etree
  - B406  # import_xml_sax
  - B407  # import_xml_expat
  - B408  # import_xml_minidom
  - B409  # import_xml_pulldom
  - B410  # import_lxml
  - B411  # import_xmlrpclib
  - B412  # import_httpoxy
  - B413  # import_pycrypto
  - B501  # request_with_no_cert_validation
  - B502  # ssl_with_bad_version
  - B503  # ssl_with_bad_defaults
  - B504  # ssl_with_no_version
  - B505  # weak_cryptographic_key
  - B506  # yaml_load
  - B507  # ssh_no_host_key_verification
  - B601  # paramiko_calls
  - B602  # subprocess_popen_with_shell_equals_true
  - B603  # subprocess_without_shell_equals_true
  - B604  # any_other_function_with_shell_equals_true
  - B605  # start_process_with_a_shell
  - B606  # start_process_with_no_shell
  - B607  # start_process_with_partial_path
  - B608  # hardcoded_sql_expressions
  - B609  # linux_commands_wildcard_injection
  - B610  # django_extra_used
  - B611  # django_rawsql_used
  - B701  # jinja2_autoescape_false
  - B702  # use_of_mako_templates
  - B703  # django_mark_safe

# Exclude paths
exclude_dirs:
  - '*/tests/*'
  - '*/test_*'
  - '*/migrations/*'
  - '*/static/src/lib/*'
  - '*/venv/*'
  - '*/env/*'
  - '*/.tox/*'
  - '*/__pycache__/*'
  - '*/build/*'
  - '*/dist/*'

# Confidence levels to report
confidence:
  - HIGH
  - MEDIUM

# Severity levels to report
severity:
  - HIGH
  - MEDIUM
  - LOW

# Output format options
# Available: csv, custom, html, json, screen, txt, xml, yaml
# Use json for CI/CD integration
# format: json

# Additional options
assert_used:
  skips: ['*test*.py', '*/tests/*']
  
hardcoded_password:
  # Allow hardcoded passwords only in specific demo/test files
  word_list: ['demo_data.xml', 'test_*.py']

sql_injection:
  # Additional SQL injection patterns to check
  qualnames:
    - 'odoo.sql_db.Cursor.execute'
    - 'psycopg2.extensions.cursor.execute'

# Custom rules for Odoo development
custom_rules:
  # Check for SQL injection in Odoo ORM usage
  - id: odoo_sql_injection
    message: "Potential SQL injection in Odoo query"
    pattern: "env\\['.*'\\]\\.search\\(.*%.*\\)"
    severity: HIGH
    confidence: MEDIUM
    
  # Check for XSS vulnerabilities in templates
  - id: odoo_xss_template
    message: "Potential XSS in Odoo template"
    pattern: "t-raw=.*\\+.*"
    severity: HIGH
    confidence: MEDIUM
    
  # Check for insecure random usage
  - id: insecure_random
    message: "Using random module for security purposes"
    pattern: "import random.*|from random import.*"
    severity: MEDIUM
    confidence: HIGH

# Baseline file for ignoring existing issues
# baseline: .bandit_baseline

# Plugin directories (if using custom plugins)
# plugins: ['bandit_plugins']

# Reports configuration
reports:
  json:
    output_file: 'bandit-report.json'
    include_test_results: true
    include_metrics: true
  html:
    output_file: 'bandit-report.html'
    title: 'CRM Social Extension Security Report'
    
# Metrics to include in reports
metrics:
  - loc  # Lines of code
  - nos  # Number of lines skipped
  - ncf  # Number of files